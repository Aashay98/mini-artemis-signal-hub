name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint-test-build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:alpine
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: mini_artemis
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user" --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry (if using) or pip tools
        run: pip install --upgrade pip

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Lint with ruff
        run: ruff app/

      - name: Type check with mypy
        run: mypy app/

      - name: Run tests with coverage
        run: pytest --asyncio-mode=auto --cov=app --cov-report=xml
      
      - name: Fail if coverage <80%
        run: |
            COVERAGE=$(awk '/^TOTAL/ {print $4}' coverage.txt | sed 's/%//')
            if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "Coverage $COVERAGE% is below 80%"
            exit 1
            fi

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

      - name: Build Docker image
        run: docker build -t $REGISTRY/${{ github.repository }}:${{ github.sha }} .

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        run: docker push $REGISTRY/${{ github.repository }}:${{ github.sha }}

